- name: Create the destination directory for docker-compose.yml
  ansible.builtin.file:
    path: "{{ pyproxy.compose.install_path }}"
    state: directory
    mode: '0755'

- name: Create docker-compose.yml file
  ansible.builtin.template:
    src: docker-compose.yml
    dest: "{{ pyproxy.compose.install_path }}/docker-compose.yml"
    mode: '0644'

- name: Create config.ini file
  ansible.builtin.template:
    src: config.ini
    dest: "{{ pyproxy.compose.install_path }}/config.ini"
    mode: '0644'

- name: Ensure volume source exists with correct type
  ansible.builtin.file:
    path: "{{ item.source }}"
    state: "{{ 'directory' if item.type == 'directory' else 'touch' }}"
    owner: 1000
    group: 1000
    mode: "{{ '0755' if item.type == 'directory' else '0644' }}"
  loop: "{{ pyproxy.compose.volumes }}"

- name: Pull the latest image using docker-compose
  ansible.builtin.command: docker-compose pull
  args:
    chdir: "{{ pyproxy.compose.install_path }}"
  register: pull_result
  changed_when: "'Pulling' in pull_result.stdout or 'up to date' not in pull_result.stdout"

- name: Start the pyproxy service using docker-compose
  ansible.builtin.command: docker-compose up -d
  args:
    chdir: "{{ pyproxy.compose.install_path }}"
  register: up_result
  changed_when: "'Creating' in up_result.stdout or 'Recreating' in up_result.stdout"
